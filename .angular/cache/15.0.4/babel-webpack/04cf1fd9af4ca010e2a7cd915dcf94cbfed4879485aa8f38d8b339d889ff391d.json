{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CriarPensamentoComponent = class CriarPensamentoComponent {\n  constructor(service, router, formBuilder) {\n    this.service = service;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      conteudo: ['', Validators.compose([Validators.required, Validators.pattern(/(.|\\s)*\\S(.|\\s)*/)])],\n      autoria: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n      modelo: ['modelo1']\n    });\n  }\n  criarPensamento() {\n    console.log(this.formulario.get('autoria')?.errors);\n    if (this.formulario.valid) {\n      this.service.criar(this.formulario.value).subscribe(() => {\n        this.router.navigate(['/listarPensamento']);\n      });\n    }\n  }\n  cancelar() {\n    this.router.navigate(['/listarPensamento']);\n  }\n};\nCriarPensamentoComponent = __decorate([Component({\n  selector: 'app-criar-pensamento',\n  templateUrl: './criar-pensamento.component.html',\n  styleUrls: ['./criar-pensamento.component.css']\n})], CriarPensamentoComponent);\nexport { CriarPensamentoComponent };\n//arquivo responsavel por adicionar esse comportamento essa logica e essas funcionalidades e a classe typeScript ou chamada de component sempre que eu me referir a component estou falando do arquivo TS para  atributos e ações que realizam metodo e eventos","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAOnCC,YACUC,OAA0B,EAC1BC,MAAc,EACdC,WAAwB;IAFxB,YAAO,GAAPF,OAAO;IACP,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;EAChB;EAELC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACvCC,QAAQ,EAAE,CAAC,EAAE,EACbT,UAAU,CAACU,OAAO,CAAC,CACnBV,UAAU,CAACW,QAAQ,EACnBX,UAAU,CAACY,OAAO,CAAC,kBAAkB,CAAC,CACvC,CAAC,CAAC;MACDC,OAAO,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACU,OAAO,CAAC,CACjCV,UAAU,CAACW,QAAQ,EACnBX,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC,CAAC;MACDC,MAAM,EAAE,CAAC,SAAS;KACnB,CAAC;EACJ;EAEEC,eAAe;IACbC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,UAAU,CAACY,GAAG,CAAC,SAAS,CAAC,EAAEC,MAAM,CAAC;IACnD,IAAG,IAAI,CAACb,UAAU,CAACc,KAAK,EAAC;MACvB,IAAI,CAAClB,OAAO,CAACmB,KAAK,CAAC,IAAI,CAACf,UAAU,CAACgB,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QACvD,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;MAC7C,CAAC,CAAC;;EAEN;EAEAC,QAAQ;IACN,IAAI,CAACtB,MAAM,CAACqB,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;EAC7C;CAEH;AAzCYxB,wBAAwB,eALpCF,SAAS,CAAC;EACT4B,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GACW5B,wBAAwB,CAyCpC;SAzCYA,wBAAwB;AA2CrC","names":["Component","Validators","CriarPensamentoComponent","constructor","service","router","formBuilder","ngOnInit","formulario","group","conteudo","compose","required","pattern","autoria","minLength","modelo","criarPensamento","console","log","get","errors","valid","criar","value","subscribe","navigate","cancelar","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Natha\\meu-primeiro-app\\src\\app\\componentes\\pensamentos\\criar-pensamento\\criar-pensamento.component.ts"],"sourcesContent":["import { PensamentoService } from './../pensamento.service';\nimport { Pensamento } from './../pensamento';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-criar-pensamento',\n  templateUrl: './criar-pensamento.component.html',\n  styleUrls: ['./criar-pensamento.component.css']\n})\nexport class CriarPensamentoComponent implements OnInit{\n//ao colocar [value] o angular vem aqui e procura exatamente a propriedade com esse nome property binding\n\n\n  //atributo que vai representar o formulario\n  formulario!: FormGroup;\n\n  constructor (\n    private service: PensamentoService,\n    private router: Router,\n    private formBuilder: FormBuilder\n    ) {}\n\n  ngOnInit(): void {\n    this.formulario = this.formBuilder.group({\n      conteudo: ['',\n      Validators.compose([\n      Validators.required,\n      Validators.pattern(/(.|\\s)*\\S(.|\\s)*/)\n    ])],\n      autoria: ['', Validators.compose([\n      Validators.required,\n      Validators.minLength(3)\n    ])],\n      modelo: ['modelo1']\n    })\n  }\n\n    criarPensamento(){//função para o botão salvar\n      console.log(this.formulario.get('autoria')?.errors)\n      if(this.formulario.valid){\n        this.service.criar(this.formulario.value).subscribe(() =>{\n          this.router.navigate(['/listarPensamento']);\n        });\n      }\n    }\n\n    cancelar(){\n      this.router.navigate(['/listarPensamento']);\n    }\n\n}\n\n//arquivo responsavel por adicionar esse comportamento essa logica e essas funcionalidades e a classe typeScript ou chamada de component sempre que eu me referir a component estou falando do arquivo TS para  atributos e ações que realizam metodo e eventos\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}