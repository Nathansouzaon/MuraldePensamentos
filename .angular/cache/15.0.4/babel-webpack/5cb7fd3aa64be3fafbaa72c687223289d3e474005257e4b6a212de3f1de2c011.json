{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { minusculoValidator } from '../criar-pensamento/minusculoValidators';\nlet EditarPensamentoComponent = class EditarPensamentoComponent {\n  //injetar serviços\n  constructor(service, router, route, formBuilder) {\n    this.service = service;\n    this.router = router;\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.pensamento = {\n      id: 0,\n      conteudo: '',\n      autoria: '',\n      modelo: ''\n    };\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id'); //a informação que que eu quero e o id\n    this.service.buscarPorId(parseInt(id)).subscribe(pensamento => {\n      this.pensamento = pensamento;\n    });\n    this.formulario = this.formBuilder.group({\n      conteudo: ['', Validators.compose([Validators.required, Validators.pattern(/(.|\\s)*\\S(.|\\s)*/)])],\n      autoria: ['', Validators.compose([Validators.required, Validators.minLength(3), minusculoValidator])],\n      modelo: ['modelo1']\n    });\n  }\n  editarPensamento() {\n    console.log(this.formulario.get('autoria')?.errors);\n    if (this.formulario.valid) {\n      this.service.editar(this.pensamento).subscribe(() => {\n        this.router.navigate(['/listarPensamento']);\n      });\n    }\n  }\n  cancelar() {\n    this.router.navigate(['/listarPensamento']);\n  }\n};\nEditarPensamentoComponent = __decorate([Component({\n  selector: 'app-editar-pensamento',\n  templateUrl: './editar-pensamento.component.html',\n  styleUrls: ['./editar-pensamento.component.css']\n})], EditarPensamentoComponent);\nexport { EditarPensamentoComponent };","map":{"version":3,"mappings":";AAAA,SAAiCA,UAAU,QAAQ,gBAAgB;AAInE,SAASC,SAAS,QAAgB,eAAe;AACjD,SAASC,kBAAkB,QAAQ,yCAAyC;AAOrE,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAWpC;EACAC,YACUC,OAAyB,EACzBC,MAAc,EACdC,KAAqB,EACrBC,WAAwB;IAHxB,YAAO,GAAPH,OAAO;IACP,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;IAdrB,eAAU,GAAc;MACtBC,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;KACT;EAUG;EAEJC,QAAQ;IACN,MAAMJ,EAAE,GAAI,IAAI,CAACF,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnD,IAAI,CAACX,OAAO,CAACY,WAAW,CAACC,QAAQ,CAACT,EAAG,CAAC,CAAC,CAACU,SAAS,CAAEC,UAAU,IAAI;MAC/D,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B,CAAC,CAAC;IACF,IAAI,CAACC,UAAU,GAAG,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC;MACvCZ,QAAQ,EAAE,CAAC,EAAE,EACbV,UAAU,CAACuB,OAAO,CAAC,CACnBvB,UAAU,CAACwB,QAAQ,EACnBxB,UAAU,CAACyB,OAAO,CAAC,kBAAkB,CAAC,CACvC,CAAC,CAAC;MACDd,OAAO,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACuB,OAAO,CAAC,CACjCvB,UAAU,CAACwB,QAAQ,EACnBxB,UAAU,CAAC0B,SAAS,CAAC,CAAC,CAAC,EACvBxB,kBAAkB,CACnB,CAAC,CAAC;MACDU,MAAM,EAAE,CAAC,SAAS;KACnB,CAAC;EAGJ;EAEAe,gBAAgB;IACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,UAAU,CAACL,GAAG,CAAC,SAAS,CAAC,EAAEc,MAAM,CAAC;IACnD,IAAG,IAAI,CAACT,UAAU,CAACU,KAAK,EAAC;MACvB,IAAI,CAAC1B,OAAO,CAAC2B,MAAM,CAAC,IAAI,CAACZ,UAAU,CAAC,CAACD,SAAS,CAAC,MAAK;QAClD,IAAI,CAACb,MAAM,CAAC2B,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;MAC7C,CAAC,CAAC;;EAEN;EAEAC,QAAQ;IACN,IAAI,CAAC5B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;EAC7C;CACD;AArDY9B,yBAAyB,eALrCF,SAAS,CAAC;EACTkC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,GACWlC,yBAAyB,CAqDrC;SArDYA,yBAAyB","names":["Validators","Component","minusculoValidator","EditarPensamentoComponent","constructor","service","router","route","formBuilder","id","conteudo","autoria","modelo","ngOnInit","snapshot","paramMap","get","buscarPorId","parseInt","subscribe","pensamento","formulario","group","compose","required","pattern","minLength","editarPensamento","console","log","errors","valid","editar","navigate","cancelar","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Natha\\meu-primeiro-app\\src\\app\\componentes\\pensamentos\\editar-pensamento\\editar-pensamento.component.ts"],"sourcesContent":["import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PensamentoService } from './../pensamento.service';\nimport { Pensamento } from './../pensamento';\nimport { Component, OnInit } from '@angular/core';\nimport { minusculoValidator } from '../criar-pensamento/minusculoValidators';\n\n@Component({\n  selector: 'app-editar-pensamento',\n  templateUrl: './editar-pensamento.component.html',\n  styleUrls: ['./editar-pensamento.component.css']\n})\nexport class EditarPensamentoComponent implements OnInit {\n\n  pensamento:Pensamento = {\n    id: 0,\n    conteudo: '',\n    autoria: '',\n    modelo: ''\n  }\n\n   formulario!: FormGroup;\n\n  //injetar serviços\n  constructor(\n    private service:PensamentoService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n    ){}\n\n  ngOnInit(): void {\n    const id =  this.route.snapshot.paramMap.get('id');//a informação que que eu quero e o id\n    this.service.buscarPorId(parseInt(id!)).subscribe((pensamento) =>{\n      this.pensamento = pensamento\n    })\n    this.formulario = this.formBuilder.group({\n      conteudo: ['',\n      Validators.compose([\n      Validators.required,\n      Validators.pattern(/(.|\\s)*\\S(.|\\s)*/)\n    ])],\n      autoria: ['', Validators.compose([\n      Validators.required,\n      Validators.minLength(3),\n      minusculoValidator\n    ])],\n      modelo: ['modelo1']\n    })\n\n\n  }\n\n  editarPensamento(){\n    console.log(this.formulario.get('autoria')?.errors);\n    if(this.formulario.valid){\n      this.service.editar(this.pensamento).subscribe(() =>{\n        this.router.navigate(['/listarPensamento']);\n      })\n    }\n  }\n\n  cancelar(){\n    this.router.navigate(['/listarPensamento']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}