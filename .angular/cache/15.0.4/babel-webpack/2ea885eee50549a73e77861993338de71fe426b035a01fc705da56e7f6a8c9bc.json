{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../pensamento.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../pensamento/pensamento.component\";\nimport * as i6 from \"./botao-carregar-mais/botao-carregar-mais.component\";\nfunction ListarPensamentoComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-pensamento\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pensamento_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pensamento\", pensamento_r4)(\"listaFavoritos\", ctx_r3.listaFavoritos);\n  }\n}\nfunction ListarPensamentoComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, ListarPensamentoComponent_div_16_div_1_Template, 2, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.listaPensamentos);\n  }\n}\nfunction ListarPensamentoComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"p\");\n    i0.ɵɵtext(2, \"Ainda n\\u00E3o h\\u00E1 pensamentos cadastrados\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ListarPensamentoComponent {\n  //assim tenho acesso a todos os metodos desse service\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.listaPensamentos = []; //array para conter os pensamentos\n    this.paginaAtual = 1;\n    this.haMaisPensamentos = true;\n    this.filtro = '';\n    this.favoritos = false;\n    this.listaFavoritos = [];\n  }\n  ngOnInit() {\n    this.service.listar(this.paginaAtual, this.filtro, this.favoritos).subscribe(listaPensamentos => {\n      this.listaPensamentos = listaPensamentos; //vai receber a lista que vai ser obtida no obsevable\n    }); //pegando esse metodo o subscribe o observable vai entender que e necessario emitir notificações sempre que tiver uma mudança assim vamos conseguir listar os pensamentos\n  }\n\n  carregarMaisPensamentos() {\n    this.service.listar(++this.paginaAtual, this.filtro, this.favoritos).subscribe(listaPensamentos => {\n      this.listaPensamentos.push(...listaPensamentos); //...quero que essa lista seja acrescida os pensamentos que ja existem e mais os que forem renderizados\n      if (!listaPensamentos.length) {\n        this.haMaisPensamentos = false;\n      }\n    });\n  }\n  pesquisarPensamentos() {\n    this.haMaisPensamentos = true; //quero que o botão sempre seja renderizado quando pesquisar\n    this.paginaAtual = 1; //renicializar com 1\n    this.service.listar(this.paginaAtual, this.filtro, this.favoritos).subscribe(listaPensamentos => {\n      this.listaPensamentos = listaPensamentos; // lista vai receber lista retornada\n    });\n  }\n\n  recarregarComponente() {\n    this.router.routeReuseStrategy;\n    this.router.onSameUrlNavigation = 'reload'; //essa propriedade diz que quando eu estiver navegando na mesma url eu preciso dizer pro angular o que eu quero que aconteça\n    this.router.navigate([this.router.url]); //essa propriedade representa a url atual\n  }\n\n  listarFavoritos() {\n    this.favoritos = true;\n    this.haMaisPensamentos = true; //quero que o botão carregar mais pensamentos apareça caso vier muitos favoritos\n    this.paginaAtual = 1;\n    this.service.listar(this.paginaAtual, this.filtro, this.favoritos).subscribe(listaPensamentoFavoritos => {\n      this.listaPensamentos = listaPensamentoFavoritos;\n      this.listaFavoritos = listaPensamentoFavoritos;\n    });\n  }\n}\nListarPensamentoComponent.ɵfac = function ListarPensamentoComponent_Factory(t) {\n  return new (t || ListarPensamentoComponent)(i0.ɵɵdirectiveInject(i1.PensamentoService), i0.ɵɵdirectiveInject(i2.Router));\n};\nListarPensamentoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListarPensamentoComponent,\n  selectors: [[\"app-listar-pensamento\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"header\", \"d-flex\"], [1, \"buscar-pensamentos\"], [\"type\", \"search\", \"placeholder\", \"O que voc\\u00EA procura?\", \"autofocus\", \"\", 1, \"filtro\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [\"src\", \"../../../../assets/imagens/lupa.png\", \"alt\", \"lupa azul\"], [1, \"ff-inter\"], [1, \"botoes\"], [1, \"botao\", 3, \"click\"], [\"routerLink\", \"/criarPensamento\", 1, \"botao\"], [\"class\", \"mural\", 4, \"ngIf\", \"ngIfElse\"], [3, \"haMaisPensamentos\", \"click\"], [\"semPensamentos\", \"\"], [1, \"mural\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pensamento\", \"listaFavoritos\"], [1, \"ff-inter\", \"sem-pensamentos\"]],\n  template: function ListarPensamentoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"header\", 1)(2, \"div\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ListarPensamentoComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.filtro = $event;\n      })(\"keyup\", function ListarPensamentoComponent_Template_input_keyup_3_listener() {\n        return ctx.pesquisarPensamentos();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"h2\", 5);\n      i0.ɵɵtext(6, \"Meu Mural\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ListarPensamentoComponent_Template_button_click_8_listener() {\n        return ctx.recarregarComponente();\n      });\n      i0.ɵɵtext(9, \"Meu Mural\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ListarPensamentoComponent_Template_button_click_10_listener() {\n        return ctx.listarFavoritos();\n      });\n      i0.ɵɵtext(11, \"Meus Favoritos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 8);\n      i0.ɵɵtext(13, \"Novo Pensamento\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵtext(15, \"Adicionar Pensamento\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, ListarPensamentoComponent_div_16_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"app-botao-carregar-mais\", 10);\n      i0.ɵɵlistener(\"click\", function ListarPensamentoComponent_Template_app_botao_carregar_mais_click_17_listener() {\n        return ctx.carregarMaisPensamentos();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, ListarPensamentoComponent_ng_template_18_Template, 3, 0, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(19);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.filtro);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.listaPensamentos.length > 0)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"haMaisPensamentos\", ctx.haMaisPensamentos);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.PensamentoComponent, i6.BotaoCarregarMaisComponent],\n  styles: [\".mural[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  gap: 2rem;\\r\\n  justify-content: center;\\r\\n  margin: 1rem 0 2rem;\\r\\n}\\r\\n\\r\\n.d-flex[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 2rem;\\r\\n}\\r\\n\\r\\n.sem-pensamentos[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  padding: 2rem 0 5rem;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.d-flex[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 2rem;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.buscar-pensamentos[_ngcontent-%COMP%] {\\r\\n  background: #F8F9FE;\\r\\n  box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.1);\\r\\n  border-radius: 10px;\\r\\n  height: 44px;\\r\\n  left: 421px;\\r\\n  top: 490px;\\r\\n  width: 510px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  text-align: center;\\r\\n  align-self: center;\\r\\n}\\r\\n\\r\\n.buscar-pensamentos[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\r\\n  padding-right: 15px;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%]::placeholder {\\r\\n  color: #C4C4C4;\\r\\n  font-family: 'Inter';\\r\\n  font-style: normal;\\r\\n  font-weight: 400;\\r\\n  font-size: 18px;\\r\\n  line-height: 29px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"search\\\"][_ngcontent-%COMP%]::-webkit-search-cancel-button {\\r\\n  -webkit-appearance: none;\\r\\n}\\r\\n\\r\\n.filtro[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  left: 437px;\\r\\n  top: 537px;\\r\\n  font-family: 'Inter';\\r\\n  font-style: normal;\\r\\n  font-weight: 400;\\r\\n  font-size: 20px;\\r\\n  line-height: 29px;\\r\\n  border: none;\\r\\n  outline: 0;\\r\\n  text-decoration: none;\\r\\n  padding-left: 15px;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n.botoes[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  justify-content: center;\\r\\n}\\r\\n.botoes[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n  margin-left: 10px;\\r\\n  margin-right: 2px;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 216px) {\\r\\n  .buscar-pensamentos[_ngcontent-%COMP%] {\\r\\n    width: 250px;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 396px) {\\r\\n  .buscar-pensamentos[_ngcontent-%COMP%] {\\r\\n    width: 380px;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 576px) {\\r\\n  .buscar-pensamentos[_ngcontent-%COMP%] {\\r\\n    width: 510px;\\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvcGVuc2FtZW50b3MvbGlzdGFyLXBlbnNhbWVudG8vbGlzdGFyLXBlbnNhbWVudG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixlQUFlO0VBQ2YsU0FBUztFQUNULHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixvQkFBb0I7QUFDdEI7Ozs7QUFJQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztFQUNULHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQiwwQ0FBMEM7RUFDMUMsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsVUFBVTtFQUNWLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osV0FBVztFQUNYLFVBQVU7RUFDVixvQkFBb0I7RUFDcEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFlBQVk7RUFDZDtBQUNGOztBQUVBO0VBQ0U7SUFDRSxZQUFZO0VBQ2Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5tdXJhbCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgZ2FwOiAycmVtO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbjogMXJlbSAwIDJyZW07XHJcbn1cclxuXHJcbi5kLWZsZXh7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGdhcDogMnJlbTtcclxufVxyXG5cclxuLnNlbS1wZW5zYW1lbnRvcyB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDJyZW0gMCA1cmVtO1xyXG59XHJcblxyXG5cclxuXHJcbi5kLWZsZXh7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGdhcDogMnJlbTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmJ1c2Nhci1wZW5zYW1lbnRvcyB7XHJcbiAgYmFja2dyb3VuZDogI0Y4RjlGRTtcclxuICBib3gtc2hhZG93OiA0cHggNHB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBoZWlnaHQ6IDQ0cHg7XHJcbiAgbGVmdDogNDIxcHg7XHJcbiAgdG9wOiA0OTBweDtcclxuICB3aWR0aDogNTEwcHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5idXNjYXItcGVuc2FtZW50b3MgaW1nIHtcclxuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG59XHJcblxyXG5pbnB1dDo6cGxhY2Vob2xkZXIge1xyXG4gIGNvbG9yOiAjQzRDNEM0O1xyXG4gIGZvbnQtZmFtaWx5OiAnSW50ZXInO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBsaW5lLWhlaWdodDogMjlweDtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG4uZmlsdHJvIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbGVmdDogNDM3cHg7XHJcbiAgdG9wOiA1MzdweDtcclxuICBmb250LWZhbWlseTogJ0ludGVyJztcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDI5cHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIG91dGxpbmU6IDA7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIHBhZGRpbmctbGVmdDogMTVweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4uYm90b2VzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuLmJvdG9lcyBidXR0b24ge1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMnB4O1xyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAyMTZweCkge1xyXG4gIC5idXNjYXItcGVuc2FtZW50b3Mge1xyXG4gICAgd2lkdGg6IDI1MHB4O1xyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzk2cHgpIHtcclxuICAuYnVzY2FyLXBlbnNhbWVudG9zIHtcclxuICAgIHdpZHRoOiAzODBweDtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU3NnB4KSB7XHJcbiAgLmJ1c2Nhci1wZW5zYW1lbnRvcyB7XHJcbiAgICB3aWR0aDogNTEwcHg7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ListarPensamentoComponent","constructor","service","router","ngOnInit","listar","paginaAtual","filtro","favoritos","subscribe","listaPensamentos","carregarMaisPensamentos","push","length","haMaisPensamentos","pesquisarPensamentos","recarregarComponente","routeReuseStrategy","onSameUrlNavigation","navigate","url","listarFavoritos","listaPensamentoFavoritos","listaFavoritos","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Natha\\meu-primeiro-app\\src\\app\\componentes\\pensamentos\\listar-pensamento\\listar-pensamento.component.html","C:\\Users\\Natha\\meu-primeiro-app\\src\\app\\componentes\\pensamentos\\listar-pensamento\\listar-pensamento.component.ts"],"sourcesContent":["<section class=\"container\">\n   <header class=\"header d-flex\">\n     <div class=\"buscar-pensamentos\">\n      <input\n      type=\"search\"\n      class=\"filtro\"\n      placeholder=\"O que você procura?\"\n      autofocus\n      [(ngModel)]=\"filtro\"\n      (keyup)=\"pesquisarPensamentos()\"\n      >\n      <img src=\"../../../../assets/imagens/lupa.png\" alt=\"lupa azul\">\n     </div>\n      <h2 class=\"ff-inter\">Meu Mural</h2>\n      <div class=\"botoes\">\n        <button class=\"botao\" (click)=\"recarregarComponente()\">Meu Mural</button>\n        <button class=\"botao\" (click)=\"listarFavoritos()\">Meus Favoritos</button>\n        <button routerLink=\"/criarPensamento\" class=\"botao\">Novo Pensamento</button>\n      </div>\n      <button routerLink=\"/criarPensamento\" class=\"botao\">Adicionar Pensamento</button>\n      <!--router link diretiva esse elemento se torna um link e faz a navegação para uma rota especifica -->\n   </header>\n   <div class=\"mural\" *ngIf=\"listaPensamentos.length > 0, else semPensamentos\">\n    <div *ngFor=\"let pensamento of listaPensamentos\">\n      <app-pensamento\n     [pensamento]=\"pensamento\"\n      [listaFavoritos]=\"listaFavoritos\"\n     ></app-pensamento><!--agora o pensamento possui acesso a essa lista de favoritos-->\n    </div>\n\n   </div>\n</section>\n<app-botao-carregar-mais\n [haMaisPensamentos]=\"haMaisPensamentos\"\n (click)=\"carregarMaisPensamentos()\"\n >\n\n</app-botao-carregar-mais>\n<ng-template #semPensamentos>\n    <div class=\"ff-inter sem-pensamentos\">\n      <p>Ainda não há pensamentos cadastrados</p>\n    </div>\n</ng-template>\n\n\n<!--quando queremos mostrar varios elementos com a mesma estrutura basica ou quando iterar uma lista de elementos usamos uma estrutura de repetição\ndiretiva ngFor\n*ngFor=\"let pensamento(representa cada um dos elementos da lista) of listaPensamentos\" quero iterar pela lista de pensamentos e cada elemento da lista de pensamentos vai ser um pensamento\n//[pensamento]=\"pensamento\" fazendo property binding dessa propriedade[pensamento] para que recebe a propriedade que você quer\n\n\nO “*ngFor” permite percorrer um array e exibir cada item como elemento no template.\n\n\nA sintaxe é composta por uma variável local que recebe o valor de cada item percorrido seguido de qual será o array ou objeto iterável.\n\n-->\n","import { Router } from '@angular/router';\nimport { PensamentoService } from './../pensamento.service';\nimport { Pensamento } from './../pensamento';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-listar-pensamento',\n  templateUrl: './listar-pensamento.component.html',\n  styleUrls: ['./listar-pensamento.component.css']\n})\nexport class ListarPensamentoComponent implements OnInit {\n\n   listaPensamentos: Pensamento[] = []//array para conter os pensamentos\n   paginaAtual:number = 1;\n   haMaisPensamentos:boolean=true;\n   filtro:string = '';\n   favoritos:boolean=false;\n   listaFavoritos:Pensamento[] = [];\n\n   //assim tenho acesso a todos os metodos desse service\n   constructor(\n    private service: PensamentoService,\n    private router: Router\n    ){}\n\n   ngOnInit(): void {//toda logica que eu queira que seja executada assim que o componente for carregado coloco aqui\n    this.service.listar(this.paginaAtual, this.filtro, this.favoritos).subscribe((listaPensamentos) =>{\n      this.listaPensamentos = listaPensamentos;//vai receber a lista que vai ser obtida no obsevable\n    });//pegando esse metodo o subscribe o observable vai entender que e necessario emitir notificações sempre que tiver uma mudança assim vamos conseguir listar os pensamentos\n   }\n\n   carregarMaisPensamentos(){\n    this.service.listar(++this.paginaAtual, this.filtro, this.favoritos)\n    .subscribe(listaPensamentos =>{\n      this.listaPensamentos.push(...listaPensamentos)//...quero que essa lista seja acrescida os pensamentos que ja existem e mais os que forem renderizados\n\n      if(!listaPensamentos.length){\n        this.haMaisPensamentos = false\n      }\n    })\n   }\n\n   pesquisarPensamentos(){\n      this.haMaisPensamentos = true;//quero que o botão sempre seja renderizado quando pesquisar\n      this.paginaAtual = 1;//renicializar com 1\n      this.service.listar(this.paginaAtual, this.filtro, this.favoritos)\n      .subscribe(listaPensamentos => {\n        this.listaPensamentos = listaPensamentos // lista vai receber lista retornada\n      })\n   }\n\n   recarregarComponente(){\n    this.router.routeReuseStrategy\n    this.router.onSameUrlNavigation = 'reload'; //essa propriedade diz que quando eu estiver navegando na mesma url eu preciso dizer pro angular o que eu quero que aconteça\n    this.router.navigate([this.router.url]);//essa propriedade representa a url atual\n   }\n\n   listarFavoritos(){\n    this.favoritos=true;\n     this.haMaisPensamentos = true;//quero que o botão carregar mais pensamentos apareça caso vier muitos favoritos\n     this.paginaAtual = 1;\n     this.service.listar(this.paginaAtual, this.filtro, this.favoritos)\n     .subscribe( listaPensamentoFavoritos =>{\n      this.listaPensamentos = listaPensamentoFavoritos\n      this.listaFavoritos = listaPensamentoFavoritos\n     })\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}