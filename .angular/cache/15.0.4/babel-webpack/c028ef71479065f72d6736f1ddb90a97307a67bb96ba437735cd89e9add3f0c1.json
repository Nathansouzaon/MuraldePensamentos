{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { minusculoValidator } from '../criar-pensamento/minusculoValidators';\nlet EditarPensamentoComponent = class EditarPensamentoComponent {\n  //injetar serviços\n  constructor(service, router, route, formBuilder) {\n    this.service = service;\n    this.router = router;\n    this.route = route;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id'); //a informação que que eu quero e o id\n    this.service.buscarPorId(parseInt(id)).subscribe(pensamento => {\n      this.formulario = this.formBuilder.group({\n        id: [pensamento.id],\n        conteudo: [pensamento.conteudo, Validators.compose([Validators.required, Validators.pattern(/(.|\\s)*\\S(.|\\s)*/)])],\n        autoria: [pensamento.autoria, Validators.compose([Validators.required, Validators.minLength(3), minusculoValidator])],\n        modelo: ['modelo1']\n      });\n    });\n  }\n  editarPensamento() {\n    if (this.formulario.valid) {\n      this.service.editar(this.formulario.value).subscribe(() => {\n        this.router.navigate(['/listarPensamento']);\n      });\n    }\n  }\n  cancelar() {\n    this.router.navigate(['/listarPensamento']);\n  }\n  habilitarBotao() {\n    if (this.formulario.valid) {\n      return 'botao';\n    } else return 'botao__desabilitado';\n  }\n};\nEditarPensamentoComponent = __decorate([Component({\n  selector: 'app-editar-pensamento',\n  templateUrl: './editar-pensamento.component.html',\n  styleUrls: ['./editar-pensamento.component.css']\n})], EditarPensamentoComponent);\nexport { EditarPensamentoComponent };","map":{"version":3,"mappings":";AAAA,SAAiCA,UAAU,QAAQ,gBAAgB;AAInE,SAASC,SAAS,QAAgB,eAAe;AACjD,SAASC,kBAAkB,QAAQ,yCAAyC;AAOrE,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAKpC;EACAC,YACUC,OAAyB,EACzBC,MAAc,EACdC,KAAqB,EACrBC,WAAwB;IAHxB,YAAO,GAAPH,OAAO;IACP,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;EACjB;EAEJC,QAAQ;IACN,MAAMC,EAAE,GAAI,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnD,IAAI,CAACR,OAAO,CAACS,WAAW,CAACC,QAAQ,CAACL,EAAG,CAAC,CAAC,CAACM,SAAS,CAAEC,UAAU,IAAI;MAC/D,IAAI,CAACC,UAAU,GAAG,IAAI,CAACV,WAAW,CAACW,KAAK,CAAC;QACvCT,EAAE,EAAE,CAACO,UAAU,CAACP,EAAE,CAAC;QACnBU,QAAQ,EAAE,CAACH,UAAU,CAACG,QAAQ,EAC9BpB,UAAU,CAACqB,OAAO,CAAC,CACnBrB,UAAU,CAACsB,QAAQ,EACnBtB,UAAU,CAACuB,OAAO,CAAC,kBAAkB,CAAC,CACvC,CAAC,CAAC;QACDC,OAAO,EAAE,CAACP,UAAU,CAACO,OAAO,EAC5BxB,UAAU,CAACqB,OAAO,CAAC,CACnBrB,UAAU,CAACsB,QAAQ,EACnBtB,UAAU,CAACyB,SAAS,CAAC,CAAC,CAAC,EACvBvB,kBAAkB,CACnB,CAAC,CAAC;QACDwB,MAAM,EAAE,CAAC,SAAS;OACnB,CAAC;IACJ,CAAC,CAAC;EAGJ;EAEAC,gBAAgB;IACd,IAAG,IAAI,CAACT,UAAU,CAACU,KAAK,EAAC;MACvB,IAAI,CAACvB,OAAO,CAACwB,MAAM,CAAC,IAAI,CAACX,UAAU,CAACY,KAAK,CAAC,CAACd,SAAS,CAAC,MAAK;QACxD,IAAI,CAACV,MAAM,CAACyB,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;MAC7C,CAAC,CAAC;;EAEN;EAEAC,QAAQ;IACN,IAAI,CAAC1B,MAAM,CAACyB,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC;EAC7C;EAEAE,cAAc;IACV,IAAG,IAAI,CAACf,UAAU,CAACU,KAAK,EAAE;MACxB,OAAO,OAAO;KACf,MACI,OAAO,qBAAqB;EACrC;CAED;AAvDYzB,yBAAyB,eALrCF,SAAS,CAAC;EACTiC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,GACWjC,yBAAyB,CAuDrC;SAvDYA,yBAAyB","names":["Validators","Component","minusculoValidator","EditarPensamentoComponent","constructor","service","router","route","formBuilder","ngOnInit","id","snapshot","paramMap","get","buscarPorId","parseInt","subscribe","pensamento","formulario","group","conteudo","compose","required","pattern","autoria","minLength","modelo","editarPensamento","valid","editar","value","navigate","cancelar","habilitarBotao","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Natha\\meu-primeiro-app\\src\\app\\componentes\\pensamentos\\editar-pensamento\\editar-pensamento.component.ts"],"sourcesContent":["import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PensamentoService } from './../pensamento.service';\nimport { Pensamento } from './../pensamento';\nimport { Component, OnInit } from '@angular/core';\nimport { minusculoValidator } from '../criar-pensamento/minusculoValidators';\n\n@Component({\n  selector: 'app-editar-pensamento',\n  templateUrl: './editar-pensamento.component.html',\n  styleUrls: ['./editar-pensamento.component.css']\n})\nexport class EditarPensamentoComponent implements OnInit {\n\n\n   formulario!: FormGroup;\n\n  //injetar serviços\n  constructor(\n    private service:PensamentoService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n    ){}\n\n  ngOnInit(): void {\n    const id =  this.route.snapshot.paramMap.get('id');//a informação que que eu quero e o id\n    this.service.buscarPorId(parseInt(id!)).subscribe((pensamento) =>{\n      this.formulario = this.formBuilder.group({\n        id: [pensamento.id],\n        conteudo: [pensamento.conteudo,\n        Validators.compose([\n        Validators.required,\n        Validators.pattern(/(.|\\s)*\\S(.|\\s)*/)\n      ])],\n        autoria: [pensamento.autoria,\n        Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        minusculoValidator\n      ])],\n        modelo: ['modelo1']\n      })\n    })\n\n\n  }\n\n  editarPensamento(){\n    if(this.formulario.valid){\n      this.service.editar(this.formulario.value).subscribe(() =>{\n        this.router.navigate(['/listarPensamento']);\n      })\n    }\n  }\n\n  cancelar(){\n    this.router.navigate(['/listarPensamento']);\n  }\n\n  habilitarBotao(): string {\n      if(this.formulario.valid) {\n        return 'botao'\n      }\n      else return 'botao__desabilitado'\n  }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}