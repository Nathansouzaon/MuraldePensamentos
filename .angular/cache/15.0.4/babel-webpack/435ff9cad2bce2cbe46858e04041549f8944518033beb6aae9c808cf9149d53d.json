{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CriarPensamentoComponent = class CriarPensamentoComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    //ao colocar [value] o angular vem aqui e procura exatamente a propriedade com esse nome property binding\n    this.pensamento = {\n      conteudo: '',\n      autoria: '',\n      modelo: 'modelo1'\n    };\n  }\n  ngOnInit() {}\n  criarPensamento() {\n    this.service.criar(this.pensamento).subscribe();\n  }\n  cancelar() {\n    alert(\"pensamento cancelado\");\n  }\n};\nCriarPensamentoComponent = __decorate([Component({\n  selector: 'app-criar-pensamento',\n  templateUrl: './criar-pensamento.component.html',\n  styleUrls: ['./criar-pensamento.component.css']\n})], CriarPensamentoComponent);\nexport { CriarPensamentoComponent };\n//arquivo responsavel por adicionar esse comportamento essa logica e essas funcionalidades e a classe typeScript ou chamada de component sempre que eu me referir a component estou falando do arquivo TS para  atributos e ações que realizam metodo e eventos","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAgB,eAAe;AAO1C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAQnCC,YACUC,OAA0B,EAC1BC,MAAM;IADN,YAAO,GAAPD,OAAO;IACP,WAAM,GAANC,MAAM;IATlB;IACE,eAAU,GAAc;MACtBC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;KACT;EAKI;EAELC,QAAQ,IAER;EAEEC,eAAe;IACb,IAAI,CAACN,OAAO,CAACO,KAAK,CAAC,IAAI,CAACC,UAAU,CAAC,CAACC,SAAS,EAAE;EACjD;EAEAC,QAAQ;IACNC,KAAK,CAAC,sBAAsB,CAAC;EAC/B;CAEH;AAzBYb,wBAAwB,eALpCD,SAAS,CAAC;EACTe,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GACWhB,wBAAwB,CAyBpC;SAzBYA,wBAAwB;AA2BrC","names":["Component","CriarPensamentoComponent","constructor","service","router","conteudo","autoria","modelo","ngOnInit","criarPensamento","criar","pensamento","subscribe","cancelar","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Natha\\meu-primeiro-app\\src\\app\\componentes\\pensamentos\\criar-pensamento\\criar-pensamento.component.ts"],"sourcesContent":["import { PensamentoService } from './../pensamento.service';\nimport { Pensamento } from './../pensamento';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-criar-pensamento',\n  templateUrl: './criar-pensamento.component.html',\n  styleUrls: ['./criar-pensamento.component.css']\n})\nexport class CriarPensamentoComponent implements OnInit{\n//ao colocar [value] o angular vem aqui e procura exatamente a propriedade com esse nome property binding\n  pensamento: Pensamento ={\n    conteudo: '',\n    autoria: '',\n    modelo: 'modelo1'\n  }\n\n  constructor (\n    private service: PensamentoService\n    private router\n    ) {}\n\n  ngOnInit(): void {\n\n  }\n\n    criarPensamento(){//função para o botão salvar\n      this.service.criar(this.pensamento).subscribe();\n    }\n\n    cancelar(){\n      alert(\"pensamento cancelado\")\n    }\n\n}\n\n//arquivo responsavel por adicionar esse comportamento essa logica e essas funcionalidades e a classe typeScript ou chamada de component sempre que eu me referir a component estou falando do arquivo TS para  atributos e ações que realizam metodo e eventos\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}