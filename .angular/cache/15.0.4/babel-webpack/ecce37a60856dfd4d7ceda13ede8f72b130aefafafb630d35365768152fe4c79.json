{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../pensamento.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../pensamento/pensamento.component\";\nimport * as i5 from \"./botao-carregar-mais/botao-carregar-mais.component\";\nfunction ListarPensamentoComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-pensamento\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pensamento_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pensamento\", pensamento_r4);\n  }\n}\nfunction ListarPensamentoComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, ListarPensamentoComponent_div_6_div_1_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.listaPensamentos);\n  }\n}\nfunction ListarPensamentoComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"p\");\n    i0.ɵɵtext(2, \"Ainda n\\u00E3o h\\u00E1 pensamentos cadastrados\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ListarPensamentoComponent {\n  //assim tenho acesso a todos os metodos desse service\n  constructor(service) {\n    this.service = service;\n    this.listaPensamentos = []; //array para conter os pensamentos\n    this.paginaAtual = 1;\n    this.haMaisPensamentos = true;\n  }\n  ngOnInit() {\n    this.service.listar(this.paginaAtual).subscribe(listaPensamentos => {\n      this.listaPensamentos = listaPensamentos; //vai receber a lista que vai ser obtida no obsevable\n    }); //pegando esse metodo o subscribe o observable vai entender que e necessario emitir notificações sempre que tiver uma mudança assim vamos conseguir listar os pensamentos\n  }\n\n  carregarMaisPensamentos() {\n    this.service.listar(++this.paginaAtual).subscribe(this.listaPensamentos, {});\n  }\n}\nListarPensamentoComponent.ɵfac = function ListarPensamentoComponent_Factory(t) {\n  return new (t || ListarPensamentoComponent)(i0.ɵɵdirectiveInject(i1.PensamentoService));\n};\nListarPensamentoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListarPensamentoComponent,\n  selectors: [[\"app-listar-pensamento\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"header\", \"d-flex\"], [1, \"ff-inter\"], [\"routerLink\", \"/criarPensamento\", 1, \"botao\"], [\"class\", \"mural\", 4, \"ngIf\", \"ngIfElse\"], [3, \"haMaisPensamentos\", \"click\"], [\"semPensamentos\", \"\"], [1, \"mural\"], [4, \"ngFor\", \"ngForOf\"], [3, \"pensamento\"], [1, \"ff-inter\", \"sem-pensamentos\"]],\n  template: function ListarPensamentoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"header\", 1)(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"Meu Mural\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵtext(5, \"Adicionar Pensamento\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, ListarPensamentoComponent_div_6_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"app-botao-carregar-mais\", 5);\n      i0.ɵɵlistener(\"click\", function ListarPensamentoComponent_Template_app_botao_carregar_mais_click_7_listener() {\n        return ctx.carregarMaisPensamentos();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, ListarPensamentoComponent_ng_template_8_Template, 3, 0, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.listaPensamentos.length > 0)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"haMaisPensamentos\", ctx.haMaisPensamentos);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.PensamentoComponent, i5.BotaoCarregarMaisComponent],\n  styles: [\".mural[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  gap: 2rem;\\r\\n  justify-content: center;\\r\\n  margin: 1rem 0 2rem;\\r\\n}\\r\\n\\r\\n.d-flex[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 2rem;\\r\\n}\\r\\n\\r\\n.sem-pensamentos[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  padding: 2rem 0 5rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvcGVuc2FtZW50b3MvbGlzdGFyLXBlbnNhbWVudG8vbGlzdGFyLXBlbnNhbWVudG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixlQUFlO0VBQ2YsU0FBUztFQUNULHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixvQkFBb0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIubXVyYWwge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGdhcDogMnJlbTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW46IDFyZW0gMCAycmVtO1xyXG59XHJcblxyXG4uZC1mbGV4e1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBnYXA6IDJyZW07XHJcbn1cclxuXHJcbi5zZW0tcGVuc2FtZW50b3Mge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiAycmVtIDAgNXJlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAOIA,2BAAiD;IAC/CA,oCAA2D;IAC7DA,iBAAM;;;;IADYA,eAAyB;IAAzBA,0CAAyB;;;;;IAF5CA,8BAA4E;IAC3EA,gFAEM;IAEPA,iBAAM;;;;IAJuBA,eAAmB;IAAnBA,iDAAmB;;;;;IAa/CA,+BAAsC;IACjCA,8DAAoC;IAAAA,iBAAI;;;ACZjD,OAAM,MAAOC,yBAAyB;EAMnC;EACAC,YAAoBC,OAA0B;IAA1B,YAAO,GAAPA,OAAO;IAL3B,qBAAgB,GAAiB,EAAE;IACnC,gBAAW,GAAU,CAAC;IACtB,sBAAiB,GAAS,IAAI;EAGkB;EAEhDC,QAAQ;IACP,IAAI,CAACD,OAAO,CAACE,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC,CAACC,SAAS,CAAEC,gBAAgB,IAAI;MACnE,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB,CAAC;IAC3C,CAAC,CAAC,CAAC;EACJ;;EAEAC,uBAAuB;IACtB,IAAI,CAACN,OAAO,CAACE,MAAM,CAAC,EAAE,IAAI,CAACC,WAAW,CAAC,CACtCC,SAAS,CAAC,IAAI,CAACC,gBAAgB,EAAG,EAElC,CAAC;EACH;;AApBUP,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTtCd,kCAA2B;MAEAA,yBAAS;MAAAA,iBAAK;MACnCA,iCAAoD;MAAAA,oCAAoB;MAAAA,iBAAS;MAGpFA,0EAKM;MACTA,iBAAU;MACVA,kDAGE;MADDA;QAAA,OAASe,6BAAyB;MAAA,EAAC;MAGpCf,iBAA0B;MAC1BA,2HAIc;;;;MAjBSA,eAAmC;MAAnCA,sDAAmC;MAQzDA,eAAuC;MAAvCA,yDAAuC","names":["i0","ListarPensamentoComponent","constructor","service","ngOnInit","listar","paginaAtual","subscribe","listaPensamentos","carregarMaisPensamentos","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Natha\\meu-primeiro-app\\src\\app\\componentes\\pensamentos\\listar-pensamento\\listar-pensamento.component.html","C:\\Users\\Natha\\meu-primeiro-app\\src\\app\\componentes\\pensamentos\\listar-pensamento\\listar-pensamento.component.ts"],"sourcesContent":["<section class=\"container\">\n   <header class=\"header d-flex\">\n      <h2 class=\"ff-inter\">Meu Mural</h2>\n      <button routerLink=\"/criarPensamento\" class=\"botao\">Adicionar Pensamento</button>\n      <!--router link diretiva esse elemento se torna um link e faz a navegação para uma rota especifica -->\n   </header>\n   <div class=\"mural\" *ngIf=\"listaPensamentos.length > 0, else semPensamentos\">\n    <div *ngFor=\"let pensamento of listaPensamentos\">\n      <app-pensamento [pensamento]=\"pensamento\"></app-pensamento>\n    </div>\n\n   </div>\n</section>\n<app-botao-carregar-mais\n [haMaisPensamentos]=\"haMaisPensamentos\"\n (click)=\"carregarMaisPensamentos()\"\n >\n\n</app-botao-carregar-mais>\n<ng-template #semPensamentos>\n    <div class=\"ff-inter sem-pensamentos\">\n      <p>Ainda não há pensamentos cadastrados</p>\n    </div>\n</ng-template>\n\n\n<!--quando queremos mostrar varios elementos com a mesma estrutura basica ou quando iterar uma lista de elementos usamos uma estrutura de repetição\ndiretiva ngFor\n*ngFor=\"let pensamento(representa cada um dos elementos da lista) of listaPensamentos\" quero iterar pela lista de pensamentos e cada elemento da lista de pensamentos vai ser um pensamento\n//[pensamento]=\"pensamento\" fazendo property binding dessa propriedade[pensamento] para que recebe a propriedade que você quer\n\n\nO “*ngFor” permite percorrer um array e exibir cada item como elemento no template.\n\n\nA sintaxe é composta por uma variável local que recebe o valor de cada item percorrido seguido de qual será o array ou objeto iterável.\n\n-->\n","import { PensamentoService } from './../pensamento.service';\nimport { Pensamento } from './../pensamento';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-listar-pensamento',\n  templateUrl: './listar-pensamento.component.html',\n  styleUrls: ['./listar-pensamento.component.css']\n})\nexport class ListarPensamentoComponent implements OnInit {\n\n   listaPensamentos: Pensamento[] = []//array para conter os pensamentos\n   paginaAtual:number = 1;\n   haMaisPensamentos:boolean=true\n\n   //assim tenho acesso a todos os metodos desse service\n   constructor(private service: PensamentoService){}\n\n   ngOnInit(): void {//toda logica que eu queira que seja executada assim que o componente for carregado coloco aqui\n    this.service.listar(this.paginaAtual).subscribe((listaPensamentos) =>{\n      this.listaPensamentos = listaPensamentos;//vai receber a lista que vai ser obtida no obsevable\n    });//pegando esse metodo o subscribe o observable vai entender que e necessario emitir notificações sempre que tiver uma mudança assim vamos conseguir listar os pensamentos\n   }\n\n   carregarMaisPensamentos(){\n    this.service.listar(++this.paginaAtual)\n    .subscribe(this.listaPensamentos =>{\n      \n    })\n   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}